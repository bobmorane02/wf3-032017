Arborescence :
    app/    :   La configuration de l'application
    src/    :   Le code PHP et HTML spécifique au projet
    vendor/ :   Code général (coeur) de l'application et les entités.
    web/    :   Le répertoire web racine. Le point d'entrée de l'application (index.php, img/ js/ css/ font/) (asset)

    -----------------------------------------------------------------------------------------------------------------

    Nature des différents fichiers :

framework/
 │
 ├─ app/
 │   ├─ Config/
 │   │   └ parameters.php           : Contient toutes les informations de connexion à la BDD et autres paramétres ...
 │   └─ Config.php                  : Contient l'inclusion des paramétres de connexion à la BDD, et les retourne dans une
 │                                    méthode getParametersConnect().
 ├─ vendor/
 │   ├─ autoload.php                : Permet d'inclure les bons fichiers lors d'un 'new' (instanciation).
 │   │                                Attention: seuls les controllers sont dans le dossier 'src', il faut donc préciser
 │   │                                que si le namespace n'est pas 'Controller' alors les fichiers sont dans 'vendor'.
 │   │                                Autre subtilité : Le controller général (Contoller\Controller) est également dans 'vendor'
 │   │
 │   ├─ Manager/
 │   │   ├─ PDOManager.php          : Cette classe représente la connexion à la BDD. Elle contient et nous retourne notre objet PDO
 │   │   │                            grâce auquel nous pourrons effectuer des requêtes.
 │   │   │                            Cette classe est un Singleton. Cela signifie qu'il qu'on ne peut instancier qu'un seul objet
 │   │   │                            de cette classe.
 │   │   │   
 │   │   └─ EntityRepository.php    : Un repository centralise tout de qui touche à la BDD et la récupération des entités.
 │   │                                Concrètement il ne doit pas y avoir de requête ailleurs que dans un repository.
 │   │                                Si une entité à besoin d'une requête spécifique (exemple: jointure) dans ce cas les
 │   │                                requêtes seront codées directement dans le repository en question.  
 │   │   
 │   ├─ Entity/
 │   │   ├─ Produit.php               Classes qui contiennent toutes les propriétés (private) de nos entités et getters et
 │   │   ├─ Membre.php                setters. POPO (Plain Old PHP Object).
 │   │   └─ Commande.php
 │   │
 │   └─ Repository/
 │          ProduitRepository.php   : Ce fichier contiendra toutes les fonctions liées à l'entité produit, demandera à EntityRepository
                                      de faire certaines requêtes. Et si l'entité a besoin de requêtes spécifiques, elles seront codéés ici.
 └─ web/
     └─ index.php                   : Clé d'entrée de notre application. (SILEX : index.php / SYMFONY : app.php)